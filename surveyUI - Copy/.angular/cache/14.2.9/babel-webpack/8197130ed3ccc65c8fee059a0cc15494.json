{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/valli/OneDrive/Desktop/Srivalli/GeorgeMason/SW642/Project/surveyUI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { LikesAbtCampus, Recommend, Survey } from 'src/app/Models/Survey';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/Services/survey.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction SurveyComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" First name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Last name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Sreet Address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Zip is required and should be 5 digits only \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" City is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" State is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Phone number is required and should be 10 digits only \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Email is required and should be Valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Date of Survey is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SurveyComponent_div_80_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\")(2, \"input\", 40);\n    i0.ɵɵlistener(\"change\", function SurveyComponent_div_80_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onCheckBoxChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const data_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", data_r12.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", data_r12.value, \" \");\n  }\n}\n\nfunction SurveyComponent_option_110_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const r_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", r_r16.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", r_r16.value, \" \");\n  }\n}\n\nfunction SurveyComponent_div_121_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 43);\n    i0.ɵɵelement(2, \"use\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \" Survey Submitted!!! \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class SurveyComponent {\n  constructor(router, fb, surveyService) {\n    this.router = router;\n    this.fb = fb;\n    this.surveyService = surveyService;\n    this.currSur = new Survey();\n    this.likesAbt = [];\n    this.recommend = [];\n    this.isSubmitted = false;\n    this.showSuccess = false;\n\n    this.delay = ms => new Promise(res => setTimeout(res, ms));\n\n    this.yourFunction = /*#__PURE__*/_asyncToGenerator(function* () {\n      yield delay(5000);\n      console.log(\"Waited 5s\");\n      yield delay(5000);\n      console.log(\"Waited an additional 5s\");\n    });\n    this.surveyForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      streetAddress: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zip: ['', [Validators.required, Validators.pattern('[0-9]{5}')]],\n      telNum: ['', [Validators.required, Validators.pattern('[0-9]{10}')]],\n      email: ['', [Validators.required, Validators.email]],\n      date: ['', [Validators.required, Validators.pattern(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/)]],\n      likesArray: this.fb.array([]),\n      hearAbtCampus: [\"\"],\n      recommend: [\"\"],\n      comments: [\"\"]\n    });\n  }\n\n  ngOnInit() {\n    Object.keys(LikesAbtCampus).filter(v => isNaN(Number(v))).forEach(key => {\n      this.likesAbt.push({\n        name: key,\n        value: key.toLowerCase()\n      });\n    });\n    Object.keys(Recommend).filter(v => isNaN(Number(v))).forEach(key => {\n      this.recommend.push({\n        name: key,\n        value: key.toLowerCase()\n      });\n    });\n  }\n\n  onChangeRecommend(e) {\n    this.surveyForm.get('recommend')?.setValue(e.target.value);\n  }\n\n  onCheckBoxChange(e) {\n    const likeArray = this.surveyForm.get('likesArray');\n\n    if (e.target.checked) {\n      likeArray.push(new FormControl(e.target.value.toUpperCase()));\n    } else {\n      let i = 0;\n      likeArray.controls.forEach(item => {\n        if (item.value == e.target.value) {\n          likeArray.removeAt(i);\n          return;\n        }\n\n        i++;\n      });\n    }\n  }\n\n  validateError(name) {\n    return this.surveyForm.get(name)?.invalid && this.isSubmitted;\n  }\n\n  refreshForm() {\n    this.isSubmitted = false;\n\n    for (let name in this.surveyForm.controls) {\n      this.surveyForm.controls[name].setErrors(null);\n    }\n\n    this.surveyForm.reset();\n  }\n\n  submit(surveyForm) {\n    this.isSubmitted = true;\n    let recr = this.surveyForm.get('recommend')?.value;\n    recr = recr?.replace(/[0-9]:/g, '');\n    console.log(this.surveyForm);\n\n    if (surveyForm.valid) {\n      console.log(\"entered if\");\n      this.currSur = {\n        firstName: this.surveyForm.get(\"firstName\")?.value,\n        lastName: this.surveyForm.get(\"lastName\")?.value,\n        streetAddress: this.surveyForm.get(\"streetAddress\")?.value,\n        zip: this.surveyForm.get(\"zip\")?.value,\n        city: this.surveyForm.get(\"city\")?.value,\n        state: this.surveyForm.get(\"state\")?.value,\n        telNum: this.surveyForm.get(\"telNum\")?.value,\n        email: this.surveyForm.get(\"email\")?.value,\n        dateOfSurvey: this.surveyForm.get(\"date\")?.value,\n        likesAbtCampus: this.surveyForm.get('likesArray')?.value,\n        hearAbtUs: this.surveyForm.get('hearAbtCampus')?.value.toUpperCase(),\n        recommend: recr.toUpperCase(),\n        comments: this.surveyForm.get(\"comments\")?.value\n      };\n      this.surveyService.submitSurveys(this.currSur).subscribe(res => {\n        this.showSuccess = true;\n      });\n    }\n  }\n\n  cancelSurvey() {\n    this.refreshForm();\n  }\n\n}\n\nSurveyComponent.ɵfac = function SurveyComponent_Factory(t) {\n  return new (t || SurveyComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.SurveyService));\n};\n\nSurveyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SurveyComponent,\n  selectors: [[\"survey\"]],\n  decls: 122,\n  vars: 13,\n  consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", 2, \"display\", \"none\"], [\"id\", \"check-circle-fill\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\"], [\"d\", \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"], [\"id\", \"form1\"], [3, \"formGroup\", \"ngSubmit\", \"reset\"], [1, \"title\"], [\"for\", \"firstName\"], [2, \"color\", \"red\"], [\"id\", \"firstName\", \"type\", \"text\", \"formControlName\", \"firstName\", \"required\", \"\"], [\"class\", \"alert\", 4, \"ngIf\"], [\"for\", \"lastName\"], [\"id\", \"lastName\", \"type\", \"text\", \"formControlName\", \"lastName\", \"required\", \"\"], [\"for\", \"streetAddress\"], [\"rows\", \"2\", \"cols\", \"50\", \"id\", \"streetAddress\", \"formControlName\", \"streetAddress\", \"required\", \"\"], [\"for\", \"zip\"], [\"id\", \"zip\", \"type\", \"number\", \"formControlName\", \"zip\", \"maxlength\", \"5\", \"required\", \"\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"formControlName\", \"city\", \"required\", \"\"], [\"for\", \"state\"], [\"id\", \"state\", \"type\", \"text\", \"formControlName\", \"state\", \"required\", \"\"], [\"for\", \"telNum\"], [\"id\", \"telNum\", \"type\", \"number\", \"formControlName\", \"telNum\", \"maxlength\", \"10\", \"required\", \"\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"for\", \"date\"], [\"id\", \"date\", \"type\", \"date\", \"formControlName\", \"date\", \"required\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", \"value\", \"Friends\", \"formControlName\", \"hearAbtCampus\"], [\"type\", \"radio\", \"value\", \"Television\", \"formControlName\", \"hearAbtCampus\"], [\"type\", \"radio\", \"value\", \"Internet\", \"formControlName\", \"hearAbtCampus\"], [\"type\", \"radio\", \"value\", \"Others\", \"formControlName\", \"hearAbtCampus\"], [\"formControlName\", \"recommend\", 1, \"custom-select\", \"mb-3\", 3, \"change\"], [\"value\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"comments\"], [\"rows\", \"2\", \"cols\", \"50\", \"id\", \"comments\", \"formControlName\", \"comments\"], [\"type\", \"submit\", 1, \"btn\", \"submit\"], [\"type\", \"reset\", 1, \"btn\", \"cancel\"], [\"id\", \"alert\", \"class\", \"alert alert-success d-flex align-items-center\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"alert\"], [\"id\", \"checkb\", \"type\", \"checkbox\", 3, \"value\", \"change\"], [3, \"ngValue\"], [\"id\", \"alert\", \"role\", \"alert\", 1, \"alert\", \"alert-success\", \"d-flex\", \"align-items-center\"], [\"width\", \"24\", \"height\", \"24\", \"role\", \"img\", \"aria-label\", \"Success:\", 1, \"bi\", \"flex-shrink-0\", \"me-2\"], [0, \"xlink\", \"href\", \"#check-circle-fill\"]],\n  template: function SurveyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"svg\", 0)(1, \"symbol\", 1);\n      i0.ɵɵelement(2, \"path\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function SurveyComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit(ctx.surveyForm);\n      })(\"reset\", function SurveyComponent_Template_form_reset_4_listener() {\n        return ctx.cancelSurvey();\n      });\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"First Name:\");\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtext(9, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"br\")(11, \"input\", 8);\n      i0.ɵɵtemplate(12, SurveyComponent_div_12_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Last Name:\");\n      i0.ɵɵelementStart(16, \"span\", 7);\n      i0.ɵɵtext(17, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"br\")(19, \"input\", 11);\n      i0.ɵɵtemplate(20, SurveyComponent_div_20_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 5)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Street Address: \");\n      i0.ɵɵelementStart(24, \"span\", 7);\n      i0.ɵɵtext(25, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"br\")(27, \"textarea\", 13);\n      i0.ɵɵtemplate(28, SurveyComponent_div_28_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 5)(30, \"label\", 14);\n      i0.ɵɵtext(31, \"Zip Code: \");\n      i0.ɵɵelementStart(32, \"span\", 7);\n      i0.ɵɵtext(33, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(34, \"br\")(35, \"input\", 15);\n      i0.ɵɵtemplate(36, SurveyComponent_div_36_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 5)(38, \"label\", 16);\n      i0.ɵɵtext(39, \"City:\");\n      i0.ɵɵelementStart(40, \"span\", 7);\n      i0.ɵɵtext(41, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(42, \"br\")(43, \"input\", 17);\n      i0.ɵɵtemplate(44, SurveyComponent_div_44_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 5)(46, \"label\", 18);\n      i0.ɵɵtext(47, \"State:\");\n      i0.ɵɵelementStart(48, \"span\", 7);\n      i0.ɵɵtext(49, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(50, \"br\")(51, \"input\", 19);\n      i0.ɵɵtemplate(52, SurveyComponent_div_52_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"div\", 5)(54, \"label\", 20);\n      i0.ɵɵtext(55, \"Phone Number:\");\n      i0.ɵɵelementStart(56, \"span\", 7);\n      i0.ɵɵtext(57, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(58, \"br\")(59, \"input\", 21);\n      i0.ɵɵtemplate(60, SurveyComponent_div_60_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 5)(62, \"label\", 22);\n      i0.ɵɵtext(63, \"Email:\");\n      i0.ɵɵelementStart(64, \"span\", 7);\n      i0.ɵɵtext(65, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(66, \"br\")(67, \"input\", 23);\n      i0.ɵɵtemplate(68, SurveyComponent_div_68_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"div\", 5)(70, \"label\", 24);\n      i0.ɵɵtext(71, \"Date of Survey:\");\n      i0.ɵɵelementStart(72, \"span\", 7);\n      i0.ɵɵtext(73, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(74, \"br\")(75, \"input\", 25);\n      i0.ɵɵtemplate(76, SurveyComponent_div_76_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"div\", 5)(78, \"label\");\n      i0.ɵɵtext(79, \"What do you like most about the campus?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(80, SurveyComponent_div_80_Template, 4, 2, \"div\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"div\", 5)(82, \"label\");\n      i0.ɵɵtext(83, \" How did you hear about Campus?\");\n      i0.ɵɵelement(84, \"br\")(85, \"input\", 27);\n      i0.ɵɵelementStart(86, \"span\");\n      i0.ɵɵtext(87, \"Friends\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(88, \"br\");\n      i0.ɵɵelementStart(89, \"label\");\n      i0.ɵɵelement(90, \"input\", 28);\n      i0.ɵɵelementStart(91, \"span\");\n      i0.ɵɵtext(92, \"Television\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(93, \"br\");\n      i0.ɵɵelementStart(94, \"label\");\n      i0.ɵɵelement(95, \"input\", 29);\n      i0.ɵɵelementStart(96, \"span\");\n      i0.ɵɵtext(97, \"Internet\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(98, \"br\");\n      i0.ɵɵelementStart(99, \"label\");\n      i0.ɵɵelement(100, \"input\", 30);\n      i0.ɵɵelementStart(101, \"span\");\n      i0.ɵɵtext(102, \"Others\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(103, \"div\", 5)(104, \"label\");\n      i0.ɵɵtext(105, \"How likely you recommend this university to your Friend?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(106, \"br\");\n      i0.ɵɵelementStart(107, \"select\", 31);\n      i0.ɵɵlistener(\"change\", function SurveyComponent_Template_select_change_107_listener($event) {\n        return ctx.onChangeRecommend($event);\n      });\n      i0.ɵɵelementStart(108, \"option\", 32);\n      i0.ɵɵtext(109, \"Choose LikelyHood:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(110, SurveyComponent_option_110_Template, 2, 2, \"option\", 33);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(111, \"div\", 5)(112, \"label\", 34);\n      i0.ɵɵtext(113, \"Comments: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(114, \"br\")(115, \"textarea\", 35);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(116, \"div\")(117, \"button\", 36);\n      i0.ɵɵtext(118, \"Submit Survey\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(119, \"button\", 37);\n      i0.ɵɵtext(120, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(121, SurveyComponent_div_121_Template, 5, 0, \"div\", 38);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.surveyForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"firstName\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"lastName\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"streetAddress\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"zip\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"city\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"state\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"telNum\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"email\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateError(\"date\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.likesAbt);\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngForOf\", ctx.recommend);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSuccess);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"h1[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    font-size: 50px;\\r\\n}\\r\\n\\r\\n\\r\\n.alert[_ngcontent-%COMP%] {\\r\\n    text-align: right;\\r\\n    color: red\\r\\n}\\r\\n\\r\\n\\r\\n.alert-success[_ngcontent-%COMP%]{\\r\\n    color: #0f5132!important;\\r\\n    position: fixed;\\r\\n    width: 30%;\\r\\n    left: 30%;\\r\\n    top: 50%;\\r\\n    margin: 2em;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n    background-color: white;\\r\\n    max-width: 600px;\\r\\n    margin: 50px auto;\\r\\n    box-sizing: border-box;\\r\\n    box-shadow: 2px 5px 10px steelblue;\\r\\n    text-align: center;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n\\r\\n.title[_ngcontent-%COMP%] {\\r\\n    text-align: left;\\r\\n    padding: 10px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n.title[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n\\r\\n.submit[_ngcontent-%COMP%], .cancel[_ngcontent-%COMP%]{\\r\\n    background-color: #333;\\r\\n    color: white;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.cancel[_ngcontent-%COMP%]{\\r\\n    margin-left:1em;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1cnZleS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkI7OztBQUdBO0lBQ0ksaUJBQWlCO0lBQ2pCO0FBQ0o7OztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLGVBQWU7SUFDZixVQUFVO0lBQ1YsU0FBUztJQUNULFFBQVE7SUFDUixXQUFXOztBQUVmOzs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixrQ0FBa0M7SUFDbEMsa0JBQWtCO0lBQ2xCLGtCQUFrQjtBQUN0Qjs7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7O0FBQ0E7SUFDSSxpQkFBaUI7QUFDckI7OztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7OztBQUNBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzdXJ2ZXkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogNTBweDtcclxufVxyXG5cclxuXHJcbi5hbGVydCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIGNvbG9yOiByZWRcclxufVxyXG5cclxuLmFsZXJ0LXN1Y2Nlc3N7XHJcbiAgICBjb2xvcjogIzBmNTEzMiFpbXBvcnRhbnQ7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgbGVmdDogMzAlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBtYXJnaW46IDJlbTtcclxuXHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiA1MHB4IGF1dG87XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYm94LXNoYWRvdzogMnB4IDVweCAxMHB4IHN0ZWVsYmx1ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnRpdGxlIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4udGl0bGUgbGFiZWx7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnN1Ym1pdCwuY2FuY2Vse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuLmNhbmNlbHtcclxuICAgIG1hcmdpbi1sZWZ0OjFlbTtcclxufVxyXG5cclxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","LikesAbtCampus","Recommend","Survey","i0","SurveyComponent","constructor","router","fb","surveyService","ms","Promise","res","setTimeout","delay","console","log","surveyForm","group","firstName","required","lastName","streetAddress","city","state","zip","pattern","telNum","email","date","likesArray","array","hearAbtCampus","recommend","comments","ngOnInit","Object","keys","filter","v","isNaN","Number","forEach","key","likesAbt","push","name","value","toLowerCase","onChangeRecommend","e","get","setValue","target","onCheckBoxChange","likeArray","checked","toUpperCase","i","controls","item","removeAt","validateError","invalid","isSubmitted","refreshForm","setErrors","reset","submit","recr","replace","valid","currSur","dateOfSurvey","likesAbtCampus","hearAbtUs","submitSurveys","subscribe","showSuccess","cancelSurvey","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\valli\\OneDrive\\Desktop\\Srivalli\\GeorgeMason\\SW642\\Project\\surveyUI\\src\\app\\Components\\survey\\survey.component.ts","C:\\Users\\valli\\OneDrive\\Desktop\\Srivalli\\GeorgeMason\\SW642\\Project\\surveyUI\\src\\app\\Components\\survey\\survey.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { first, isEmpty } from 'rxjs';\nimport { HearAbtCampus, LikesAbtCampus, Recommend, Survey } from 'src/app/Models/Survey';\nimport { SurveyService } from 'src/app/Services/survey.service';\n\n@Component({\n  selector: 'survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.css']\n})\nexport class SurveyComponent implements OnInit {\n  currSur: Survey = new Survey();\n\n  likesAbt: Array<any> = [];\n  recommend: Array<any> = [];\n  surveyForm: FormGroup;\n  isSubmitted: boolean = false;\n  showSuccess:boolean =false;\n  constructor(private router: Router, private fb: FormBuilder, private surveyService:SurveyService) {\n\n    this.surveyForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      streetAddress: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zip: ['',[Validators.required,Validators.pattern('[0-9]{5}')]],\n      telNum: ['',[Validators.required,Validators.pattern('[0-9]{10}')]],\n      email: ['', [Validators.required, Validators.email]],\n      date:['',[Validators.required,Validators.pattern(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/)]],\n      likesArray: this.fb.array([]),\n      hearAbtCampus: [\"\"],\n      recommend: [\"\"],\n      comments: [\"\"]\n    });\n\n  }\n  ngOnInit(): void {\n    Object.keys(LikesAbtCampus).filter((v) => isNaN(Number(v))).forEach(key => {\n      this.likesAbt.push({ name: key, value: key.toLowerCase() })\n    });\n\n    Object.keys(Recommend).filter((v)=>isNaN(Number(v))).forEach(key => {\n      this.recommend.push({ name: key, value: key.toLowerCase() })\n    });\n  }\n\n\n  onChangeRecommend(e:any) {\n  \n    this.surveyForm.get('recommend')?.setValue(e.target.value);\n  }\n\n  onCheckBoxChange(e: any) {\n    const likeArray: FormArray = this.surveyForm.get('likesArray') as FormArray;\n    if (e.target.checked) {\n      likeArray.push(new FormControl(e.target.value.toUpperCase()));\n    } else {\n      let i: number = 0;\n      likeArray.controls.forEach((item: any) => {\n        if (item.value == e.target.value) {\n          likeArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n\n  validateError(name: string) {\n    return this.surveyForm.get(name)?.invalid && this.isSubmitted\n  }\n\n  refreshForm(){\n   this.isSubmitted = false;\n   for(let name in this.surveyForm.controls){\n    this.surveyForm.controls[name].setErrors(null);\n   }\n   this.surveyForm.reset();\n  }\n\n  submit(surveyForm: FormGroup) {\n    this.isSubmitted = true;\n    let recr = this.surveyForm.get('recommend')?.value\n    recr =recr?.replace(/[0-9]:/g, '');\n    console.log(this.surveyForm);\n   \n\n    if (surveyForm.valid) {\n      console.log(\"entered if\");\n\n      this.currSur ={\n\n        firstName : this.surveyForm.get(\"firstName\")?.value,\n\n        lastName : this.surveyForm.get(\"lastName\")?.value,\n\n        streetAddress: this.surveyForm.get(\"streetAddress\")?.value,\n\n        zip: this.surveyForm.get(\"zip\")?.value,\n\n        city: this.surveyForm.get(\"city\")?.value,\n\n        state: this.surveyForm.get(\"state\")?.value,\n\n        telNum: this.surveyForm.get(\"telNum\")?.value,\n\n        email:this.surveyForm.get(\"email\")?.value,\n\n        dateOfSurvey: this.surveyForm.get(\"date\")?.value,\n\n        likesAbtCampus : this.surveyForm.get('likesArray')?.value as LikesAbtCampus[],\n\n        hearAbtUs :  this.surveyForm.get('hearAbtCampus')?.value.toUpperCase() as HearAbtCampus,\n\n        recommend : recr.toUpperCase() as Recommend,\n\n        comments:this.surveyForm.get(\"comments\")?.value,\n\n      }\n\n      this.surveyService.submitSurveys(this.currSur).subscribe(res =>{\n        this.showSuccess = true;\n      })\n    }\n\n  }\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n  const yourFunction = async () => {\n    await delay(5000);\n    console.log(\"Waited 5s\");\n  \n    await delay(5000);\n    console.log(\"Waited an additional 5s\");\n  };\n\n  cancelSurvey(){\n    this.refreshForm();\n  }\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\n    <symbol id=\"check-circle-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n        <path\n            d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\n    </symbol>\n</svg>\n<div id=\"form1\">\n    <form [formGroup]=\"surveyForm\" (ngSubmit)=\"submit(surveyForm)\" (reset)=\"cancelSurvey()\">\n        <div class=\"title\">\n            <label for=\"firstName\">First Name:<span style=\"color:red\">*</span> </label><br>\n            <input id=\"firstName\" type=\"text\" formControlName=\"firstName\" required>\n            <div class=\"alert\" *ngIf=\"validateError('firstName')\">\n                First name is required\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"lastName\">Last Name:<span style=\"color:red\">*</span> </label><br>\n            <input id=\"lastName\" type=\"text\" formControlName=\"lastName\" required>\n            <div class=\"alert\" *ngIf=\"validateError('lastName')\">\n                Last name is required\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"streetAddress\">Street Address: <span style=\"color:red\">*</span> </label><br>\n            <textarea rows=\"2\" cols=\"50\" id=\"streetAddress\" formControlName=\"streetAddress\" required></textarea>\n            <div class=\"alert\" *ngIf=\"validateError('streetAddress')\">\n                Sreet Address is required\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"zip\">Zip Code: <span style=\"color:red\">*</span></label><br>\n            <input id=\"zip\" type=\"number\" formControlName=\"zip\" maxlength=\"5\" required>\n            <div class=\"alert\" *ngIf=\"validateError('zip')\">\n                Zip is required and should be 5 digits only\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"city\">City:<span style=\"color:red\">*</span> </label><br>\n            <input id=\"city\" type=\"text\" formControlName=\"city\" required>\n            <div class=\"alert\" *ngIf=\"validateError('city')\">\n                City is required\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"state\">State:<span style=\"color:red\">*</span> </label><br>\n            <input id=\"state\" type=\"text\" formControlName=\"state\" required>\n            <div class=\"alert\" *ngIf=\"validateError('state')\">\n                State is required\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"telNum\">Phone Number:<span style=\"color:red\">*</span> </label><br>\n            <input id=\"telNum\" type=\"number\" formControlName=\"telNum\" maxlength=\"10\" required>\n            <div class=\"alert\" *ngIf=\"validateError('telNum')\">\n                Phone number is required and should be 10 digits only\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"email\">Email:<span style=\"color:red\">*</span> </label><br>\n            <input id=\"email\" type=\"email\" formControlName=\"email\" required>\n            <div class=\"alert\" *ngIf=\"validateError('email')\">\n                Email is required and should be Valid email\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"date\">Date of Survey:<span style=\"color:red\">*</span> </label><br>\n            <input id=\"date\" type=\"date\" formControlName=\"date\" required>\n            <div class=\"alert\" *ngIf=\"validateError('date')\">\n                Date of Survey is required\n            </div>\n        </div>\n\n\n        <div class=\"title\">\n            <label>What do you like most about the campus?</label>\n            <div *ngFor=\"let data of likesAbt;let i =index\">\n                <label>\n                    <input id=\"checkb\" type=\"checkbox\" [value]=\"data.value\" (change)=\"onCheckBoxChange($event)\">\n                    {{data.value}}\n                </label>\n            </div>\n        </div>\n\n        <div class=\"title\">\n            <label>\n                How did you hear about Campus?<br>\n                <input type=\"radio\" value=\"Friends\" formControlName=\"hearAbtCampus\">\n                <span>Friends</span>\n            </label><br>\n            <label>\n                <input type=\"radio\" value=\"Television\" formControlName=\"hearAbtCampus\">\n                <span>Television</span>\n            </label><br>\n            <label>\n                <input type=\"radio\" value=\"Internet\" formControlName=\"hearAbtCampus\">\n                <span>Internet</span>\n            </label><br>\n            <label>\n                <input type=\"radio\" value=\"Others\" formControlName=\"hearAbtCampus\">\n                <span>Others</span>\n            </label>\n        </div>\n\n        <div class=\"title\">\n            <label>How likely you recommend this university to your Friend?</label><br>\n            <select class=\"custom-select mb-3\" (change)=\"onChangeRecommend($event)\" formControlName=\"recommend\">\n                <option value=\"\">Choose LikelyHood:</option>\n                <option *ngFor=\"let r of recommend\" [ngValue]=\"r.value\">\n                    {{ r.value }}\n                </option>\n            </select>\n        </div>\n\n        <div class=\"title\">\n            <label for=\"comments\">Comments: </label><br>\n            <textarea rows=\"2\" cols=\"50\" id=\"comments\" formControlName=\"comments\"></textarea>\n        </div>\n        <div>\n            <button type=\"submit\" class=\"btn submit\">Submit Survey</button>\n            <button type=\"reset\" class=\"btn cancel\">Cancel</button>\n        </div>\n\n    </form>\n    <div id=\"alert\" class=\"alert alert-success d-flex align-items-center\" role=\"alert\" *ngIf=\"showSuccess\">\n        <svg class=\"bi flex-shrink-0 me-2\" width=\"24\" height=\"24\" role=\"img\" aria-label=\"Success:\">\n            <use xlink:href=\"#check-circle-fill\" />\n        </svg>\n        <div>\n            Survey Submitted!!!\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module"}